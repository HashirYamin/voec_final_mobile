import 'controller/signuppage_controller.dart';import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:maaz_s_application7/core/app_export.dart';import 'package:maaz_s_application7/core/utils/validation_functions.dart';import 'package:maaz_s_application7/widgets/custom_elevated_button.dart';import 'package:maaz_s_application7/widgets/custom_text_form_field.dart';import 'package:outline_gradient_button/outline_gradient_button.dart';
// ignore_for_file: must_be_immutable
class SignuppageScreen extends GetWidget<SignuppageController> {SignuppageScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: SizedBox(height: mediaQueryData.size.height, width: double.maxFinite, child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgSideButtons, height: 669.v, width: 409.h, alignment: Alignment.bottomCenter), Align(alignment: Alignment.center, child: Card(clipBehavior: Clip.antiAlias, elevation: 0, margin: EdgeInsets.all(0), shape: RoundedRectangleBorder(borderRadius: BorderRadiusStyle.roundedBorder68), child: Container(height: mediaQueryData.size.height, width: double.maxFinite, padding: EdgeInsets.all(6.h), decoration: BoxDecoration(borderRadius: BorderRadiusStyle.roundedBorder68, image: DecorationImage(image: fs.Svg(ImageConstant.imgGroup445), fit: BoxFit.cover)), child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: OutlineGradientButton(padding: EdgeInsets.only(left: 4.h, top: 4.v, right: 4.h, bottom: 4.v), strokeWidth: 4.h, gradient: LinearGradient(begin: Alignment(0.5, 0.23), end: Alignment(0.5, 0.64), colors: [appTheme.blueGray400, appTheme.black90001]), corners: Corners(topLeft: Radius.circular(62), topRight: Radius.circular(62), bottomLeft: Radius.circular(62), bottomRight: Radius.circular(62)), child: Container(height: 830.v, width: 397.h, decoration: BoxDecoration(borderRadius: BorderRadius.circular(62.h))))), Align(alignment: Alignment.center, child: Card(clipBehavior: Clip.antiAlias, elevation: 0, margin: EdgeInsets.all(0), shape: RoundedRectangleBorder(borderRadius: BorderRadiusStyle.roundedBorder50), child: Container(height: 805.v, width: 370.h, decoration: BoxDecoration(borderRadius: BorderRadiusStyle.roundedBorder50), child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgScreen, height: 805.v, width: 370.h, radius: BorderRadius.circular(50.h), alignment: Alignment.center), Align(alignment: Alignment.center, child: SizedBox(height: 786.v, width: 336.h, child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.center, child: Column(mainAxisSize: MainAxisSize.min, children: [CustomImageView(imagePath: ImageConstant.imgEllipse45, height: 50.adaptSize, width: 50.adaptSize, radius: BorderRadius.circular(25.h), alignment: Alignment.centerLeft, margin: EdgeInsets.only(left: 15.h), onTap: () {navToLoginSignup();}), SizedBox(height: 13.v), Align(alignment: Alignment.centerLeft, child: Container(width: 281.h, margin: EdgeInsets.only(left: 9.h), decoration: AppDecoration.gradientPrimaryToPrimary.copyWith(borderRadius: BorderRadiusStyle.customBorderTL38), child: OutlineGradientButton(padding: EdgeInsets.only(left: 1.h, top: 1.v, right: 1.h, bottom: 1.v), strokeWidth: 1.h, gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [theme.colorScheme.primary.withOpacity(0.6), theme.colorScheme.primary]), corners: Corners(topLeft: Radius.circular(38), topRight: Radius.circular(37), bottomLeft: Radius.circular(38), bottomRight: Radius.circular(37)), child: Padding(padding: EdgeInsets.symmetric(horizontal: 30.h, vertical: 12.v), child: Text("lbl_welcome".tr, style: theme.textTheme.displayMedium))))), SizedBox(height: 32.v), _buildUserName(), SizedBox(height: 16.v), _buildEmail(), SizedBox(height: 16.v), _buildPassword(), SizedBox(height: 14.v), _buildPassword1(), SizedBox(height: 33.v), _buildRegisterButton(), SizedBox(height: 41.v), _buildLoginSection()])), Align(alignment: Alignment.centerRight, child: Padding(padding: EdgeInsets.only(left: 32.h, top: 7.v, right: 11.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, mainAxisSize: MainAxisSize.min, children: [Padding(padding: EdgeInsets.only(bottom: 758.v), child: Text("lbl_9_41".tr, style: theme.textTheme.titleMedium)), Spacer(), Padding(padding: EdgeInsets.only(top: 774.v), child: SizedBox(width: 132.h, child: Divider())), CustomImageView(imagePath: ImageConstant.imgIconsRight, height: 13.v, width: 75.h, margin: EdgeInsets.only(left: 15.h, top: 3.v, bottom: 763.v))]))), CustomImageView(imagePath: ImageConstant.imgDynamicIsland, height: 35.v, width: 118.h, alignment: Alignment.topCenter)])))]))))]))))]))))); } 
/// Section Widget
Widget _buildUserName() { return Padding(padding: EdgeInsets.only(right: 5.h), child: CustomTextFormField(controller: controller.userNameController, hintText: "lbl_username".tr, validator: (value) {if (!isText(value)) {return "err_msg_please_enter_valid_text".tr;} return null;}, contentPadding: EdgeInsets.symmetric(horizontal: 18.h, vertical: 19.v), borderDecoration: TextFormFieldStyleHelper.gradientPrimaryToPrimaryTL84)); } 
/// Section Widget
Widget _buildEmail() { return Padding(padding: EdgeInsets.only(right: 5.h), child: OutlineGradientButton(padding: EdgeInsets.only(left: 1.h, top: 1.v, right: 1.h, bottom: 1.v), strokeWidth: 1.h, gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [theme.colorScheme.primary.withOpacity(1), theme.colorScheme.primary.withOpacity(0)]), corners: Corners(topLeft: Radius.circular(8), topRight: Radius.circular(8), bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)), child: CustomTextFormField(controller: controller.emailController, hintText: "lbl_enter_email".tr, textInputType: TextInputType.emailAddress, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;}, contentPadding: EdgeInsets.symmetric(horizontal: 14.h, vertical: 19.v), borderDecoration: TextFormFieldStyleHelper.gradientPrimaryToPrimaryTL85))); } 
/// Section Widget
Widget _buildPassword() { return Padding(padding: EdgeInsets.only(right: 5.h), child: OutlineGradientButton(padding: EdgeInsets.only(left: 1.h, top: 1.v, right: 1.h, bottom: 1.v), strokeWidth: 1.h, gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [theme.colorScheme.primary.withOpacity(1), theme.colorScheme.primary.withOpacity(0)]), corners: Corners(topLeft: Radius.circular(8), topRight: Radius.circular(8), bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)), child: Obx(() => CustomTextFormField(controller: controller.passwordController, hintText: "msg_enter_your_password".tr, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {controller.isShowPassword.value = !controller.isShowPassword.value;}, child: Container(margin: EdgeInsets.fromLTRB(12.h, 15.v, 5.h, 19.v), child: CustomImageView(imagePath: ImageConstant.imgFluenteye20filled, height: 22.adaptSize, width: 22.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 56.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: controller.isShowPassword.value, contentPadding: EdgeInsets.only(left: 14.h, top: 19.v, bottom: 19.v), borderDecoration: TextFormFieldStyleHelper.gradientPrimaryToPrimaryTL85)))); } 
/// Section Widget
Widget _buildPassword1() { return Padding(padding: EdgeInsets.only(right: 5.h), child: OutlineGradientButton(padding: EdgeInsets.only(left: 1.h, top: 1.v, right: 1.h, bottom: 1.v), strokeWidth: 1.h, gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [theme.colorScheme.primary.withOpacity(1), theme.colorScheme.primary.withOpacity(0)]), corners: Corners(topLeft: Radius.circular(8), topRight: Radius.circular(8), bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)), child: CustomTextFormField(controller: controller.passwordController1, hintText: "msg_confirm_your_password".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: true, contentPadding: EdgeInsets.symmetric(horizontal: 5.h, vertical: 19.v), borderDecoration: TextFormFieldStyleHelper.gradientPrimaryToPrimaryTL85))); } 
/// Section Widget
Widget _buildRegisterButton() { return CustomElevatedButton(height: 56.v, text: "lbl_register".tr, margin: EdgeInsets.only(right: 5.h), buttonStyle: CustomButtonStyles.fillGray, buttonTextStyle: CustomTextStyles.titleSmallPrimary_1, onPressed: () {navtoSignupOrLoginPage();}); } 
/// Section Widget
Widget _buildLoginSection() { return Container(margin: EdgeInsets.only(left: 5.h), decoration: AppDecoration.outlineBlack, child: Column(children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.symmetric(vertical: 8.v), child: SizedBox(width: 112.h, child: Divider(color: appTheme.indigo50))), SizedBox(height: 17.v, width: 207.h, child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.centerLeft, child: Text("msg_or_register_with".tr, style: CustomTextStyles.titleSmall14)), Align(alignment: Alignment.centerRight, child: SizedBox(width: 111.h, child: Divider(color: appTheme.indigo50)))]))]), SizedBox(height: 21.v), Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [GestureDetector(onTap: () {navToFacebook();}, child: Container(height: 56.v, width: 105.h, padding: EdgeInsets.symmetric(horizontal: 36.h, vertical: 14.v), decoration: AppDecoration.outlineIndigo.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: CustomImageView(imagePath: ImageConstant.imgFacebookIcBlueA200, height: 26.adaptSize, width: 26.adaptSize, alignment: Alignment.centerLeft))), GestureDetector(onTap: () {navToGoogle();}, child: Container(height: 56.v, width: 105.h, padding: EdgeInsets.symmetric(horizontal: 36.h, vertical: 14.v), decoration: AppDecoration.outlineIndigo.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: CustomImageView(imagePath: ImageConstant.imgGoogleIc, height: 26.adaptSize, width: 26.adaptSize, alignment: Alignment.centerLeft))), GestureDetector(onTap: () {navToApple();}, child: Container(height: 56.v, width: 105.h, padding: EdgeInsets.symmetric(horizontal: 36.h, vertical: 14.v), decoration: AppDecoration.outlineIndigo.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: CustomImageView(imagePath: ImageConstant.imgCibAppleBlack90001, height: 26.adaptSize, width: 26.adaptSize, alignment: Alignment.centerLeft)))]), SizedBox(height: 41.v), GestureDetector(onTap: () {navToLogin();}, child: RichText(text: TextSpan(children: [TextSpan(text: "msg_already_have_an2".tr, style: CustomTextStyles.titleSmallGray90002), TextSpan(text: "lbl_login_now".tr, style: CustomTextStyles.titleSmallRedA700)]), textAlign: TextAlign.left))])); } 
/// Navigates to the loginorsignuppageScreen when the action is triggered.
navToLoginSignup() { Get.toNamed(AppRoutes.loginorsignuppageScreen, ); } 
/// Navigates to the loginorsignuppageScreen when the action is triggered.
navtoSignupOrLoginPage() { Get.toNamed(AppRoutes.loginorsignuppageScreen, ); } 
/// Opens a URL in the device's default web browser.
///
/// The [context] parameter is the `BuildContext` of the widget that invoked the function.
///
/// Throws an exception if the URL could not be launched.
navToFacebook() async  { var url = 'https://www.facebook.com';if(!await launch(url)) {throw 'Could not launch https://www.facebook.com';} } 
/// Opens a URL in the device's default web browser.
///
/// The [context] parameter is the `BuildContext` of the widget that invoked the function.
///
/// Throws an exception if the URL could not be launched.
navToGoogle() async  { var url = 'https://mail.google.com';if(!await launch(url)) {throw 'Could not launch https://mail.google.com';} } 
/// Opens a URL in the device's default web browser.
///
/// The [context] parameter is the `BuildContext` of the widget that invoked the function.
///
/// Throws an exception if the URL could not be launched.
navToApple() async  { var url = 'https://appleid.apple.com';if(!await launch(url)) {throw 'Could not launch https://appleid.apple.com';} } 
/// Navigates to the loginpageScreen when the action is triggered.
navToLogin() { Get.toNamed(AppRoutes.loginpageScreen, ); } 
 }
